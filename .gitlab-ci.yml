image: gradle:jdk8-jammy
stages:
  - build
  - create
  - jinja-config
  - k8s
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME
#  - sleep 30m
build:
  stage: build
  when: manual
  script:
#    - sed -i "s/token/${CI_GRADLE_TOKEN}/g" gradle.properties
#    - sed -i "s/tag/${CI_COMMIT_TAG}/g" gradle.properties
#    - cat gradle.properties
    - ./gradlew build
    - ./gradlew publish
#  only:
#    - tags
  artifacts:
    paths:
      - /builds/muhammed.labeeb/java_build_gradle/app/build/libs
create-image:
  image: docker:19.03.6
  services:
    - docker:19.03.6-dind
  stage: create
  when: manual
  script:
  #  - sleep 30m
    - docker build -t $GITLAB_REGISTRY_URL:v$CI_COMMIT_TAG .
    - echo $GIT_LAB_PASSWORD | docker login -u $GITLAB_USERNAME --password-stdin $GITLAB_REGISTRY_URL 
    - docker push $GITLAB_REGISTRY_URL:v$CI_COMMIT_TAG
  dependencies:
    - build
#  only:
#    - tags
config:
  stage: jinja-config
  image: python:latest
  when: manual
  script:
  #  - sleep 30m
    - pip3 install j2cli
    -  j2 config.yml.j2 -o config.yaml
    - cat config.yaml
  artifacts:
      paths:
          - config.yaml

#  only:
#    - tags
deploy_k8s:
  stage: k8s
  image: 
    name: bitnami/kubectl:latest
    entrypoint: [""]
#  only:
#    - tags
  when: manual
  script:
    - sleep 30m
    - cp config.yaml $HOME/.kube/config
    - cat $HOME/.kube/config
    - cd deployment
    - sed -i "s/<VERSION>/${CI_COMMIT_TAG}/g" deployment.yaml
#    - cat deployment.yaml
#    - kubectl create ns gradle
   # - sed -i "s/registry/${REGISTRY_SECRET}/g" registry_secret.yaml
  #  - sleep 30m
    - kubectl apply -f registry_secret.yaml
    - kubectl apply -f deployment.yaml
    - kubectl apply -f service.yaml

